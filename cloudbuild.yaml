options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # # Step 0: Build the Docker image from the Dockerfile
  # - name: 'gcr.io/cloud-builders/docker'
  #   args: ['build', '-t', '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY_NAME/$_IMAGE_NAME:latest', '.']

  # # Step 1: Check if the Artifact Repository exists and create it if not
  # - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  #   entrypoint: 'sh'
  #   args:
  #     - '-c'
  #     - |
  #       if ! gcloud artifacts repositories describe $_REPOSITORY_NAME --location=$_REGION --format='value(name)'; then
  #         echo "Repository $_REPOSITORY_NAME does not exist. Creating repository..."
  #         gcloud artifacts repositories create $_REPOSITORY_NAME --repository-format=docker --location=$_REGION
  #         echo "Repository $_REPOSITORY_NAME created."
  #       else
  #         echo "Repository $_REPOSITORY_NAME already exists."
  #       fi

  # # Step 2: Push the image to Google Artifact Registry
  # - name: 'gcr.io/cloud-builders/docker'
  #   args: ['push', '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY_NAME/$_IMAGE_NAME:latest']

  # Step 3: Deploy the image to Google Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - '$_CLOUD_RUN_SERVICE'
      - '--image=$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY_NAME/$_IMAGE_NAME:latest'
      - '--region=$_REGION'
      - '--platform=managed'
      - '--allow-unauthenticated'

  # Step 4: Check status and use the URL of the deployed Cloud Run service
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        set -e  # Stop execution on any error
        # Wait for the service to be fully ready
        sleep 35
        # Accessing train_pipeline
        curl "$(gcloud run services describe $_CLOUD_RUN_SERVICE --region=$_REGION --platform=managed --format='value(status.url)')/train_pipeline"
        # Accessing predict_pipeline
        curl "$(gcloud run services describe $_CLOUD_RUN_SERVICE --region=$_REGION --platform=managed --format='value(status.url)')/predict_pipeline"

substitutions:
  _PROJECT_ID: 'astral-reef-391421'
  _REGION: 'us-central1'
  _REPOSITORY_NAME: 'mle-template'
  _IMAGE_NAME: 'mle-template'
  _CLOUD_RUN_SERVICE: 'mle-template-service'
